@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');

:root {
    font-family: 'Roboto Mono', monospace;
    color: white;
    font-size: 0.75em;
}

* {
    box-sizing: border-box;
}

a {
    text-decoration: none;
    color: inherit;
}

html, body {
    height: 100vh;
    height: fill-available;
    height: -moz-fill-available;
    height: -webkit-fill-available;
}

body {
    margin: 0;
    background-color: #242424;
    position: relative;
}

@media (min-width: 720px) {
    body {
        height: 100vh;
    }
}

#page {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: stretch;
    align-items: stretch;
}

/* Actual Code */

/* Collapse Box (Always vertical) */

.collapse-container {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
}

.collapse-box {
    outline: 1px solid #363636;
    flex: 1 1 auto;
    /* background-color: black; */
    display: flex;
    flex-direction: column;
    overflow: hidden;

    transition: flex 250ms linear;
}

.collapse-box > * {
    width: 100%;
}

.collapse-box > header {
    position: relative;
    font-size: 2em;
    width: 100%;
    height: auto;
    cursor: pointer;

    display: flex;
    align-items: center;
    padding: 0.5em 0.25em;
    overflow: hidden;
}

.collapse-box > header::before {
    filter: invert(1);
    content: '';
    position: relative;
    height: 100%;
    aspect-ratio: 1 / 1;
    background: url(images/right-arrow.png) 0/contain no-repeat;
    margin-right: 0.5em;
    transform: rotate(90deg);
    transition: transform 250ms ease;
}

.collapse-box.collapsed > header::before {
    transform: rotate(0);
}

.collapse-box > .collapsible {
    /* height: 0; */
    flex: 1 1 0;
    overflow: hidden;
}

.collapsed {
    flex: 0 0 auto;
}

.collapsed > .collapsible {
    /* flex: 0 0 0; */
}

/* The section with images */

.image-container {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.section-upload .image-container {
    cursor: pointer;
}

.section-upload .image-container:not(.image-uploaded) {
    background: url(images/upload.png) center/100px no-repeat;
}

.image-container #uploaded-image {
    user-select: none;
    pointer-events: none;
    display: none;
}

.image-container.image-uploaded #uploaded-image {
    display: block;
}

.image-container > :is(img#uploaded-image, canvas) {
    max-height: 100%;
    max-width: 100%;
}

.image-container > canvas {
    display: block;
}

/* The section with inputs and editor */

.section-editor {
    height: 100%;
    width: 100%;
    overflow: auto;
}

.CodeMirror {
    height: 100%;
    font-size: 2em;
}

/* The section with execution UI */

.section-runtime {
    /* padding: 1em; */
    width: 100%;
    height: auto;
    /* background-color: red; */
    display: flex;
    align-items: stretch;
}

button {
    font-weight: 600;
    text-transform: uppercase;
    font-size: 2em;
    text-align: center;
    border: none;
    outline: none;
    padding: 0.5em;
    cursor: pointer;
    color: black;
    background-color: transparent;
    transition: background-color 250ms ease;

    width: 100%;

    display: flex;
    justify-content: center;
    align-items: center;
}

#button-run:hover {
    background-color: hsl(150, 100%, 50%);
}

#button-save-image:hover {
    background-color: hsl(200, 100%, 50%);
}

button img {
    filter: invert(0.5);
    transform: filter 250ms ease;
    height: 1em;
}

button:hover img {
    filter: invert(0);
}